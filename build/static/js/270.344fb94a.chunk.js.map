{"version":3,"file":"static/js/270.344fb94a.chunk.js","mappings":"qKAIA,MAAMA,EAAaC,IAAA,IAAC,MAAEC,EAAK,QAAEC,EAAO,UAAEC,EAAS,KAAEC,GAAMJ,EAAA,OACrDK,EAAAA,EAAAA,MAAA,KACEC,KAAMF,EACNG,OAAO,SACPC,IAAI,sBACJC,UAAU,4IACVC,MAAO,CAAEC,eAAgB,OAAQC,MAAO,WAAaC,SAAA,EAErDR,EAAAA,EAAAA,MAAA,OAAKI,UAAU,wCAAuCI,SAAA,EACpDC,EAAAA,EAAAA,KAAA,MAAIL,UAAU,sBAAqBI,SAAEZ,KACrCa,EAAAA,EAAAA,KAAA,QAAML,UAAU,+CAA8CI,SAC3D,IAAIE,KAAKZ,GAAWa,2BAGzBF,EAAAA,EAAAA,KAAA,KAAGL,UAAU,+CAA8CI,SAAEX,MAC3D,EA2EN,EAxEgBe,KACd,MAAOC,EAASC,IAAcC,EAAAA,EAAAA,UAAS,KAChCC,EAASC,IAAcF,EAAAA,EAAAA,WAAS,IAChCG,EAAOC,IAAYJ,EAAAA,EAAAA,UAAS,OAC5BK,EAAWC,IAAgBN,EAAAA,EAAAA,UAAS,WAiB3C,OAhBAO,EAAAA,EAAAA,YAAU,KACaC,WACnB,IACE,MAAMC,QAAiBC,EAAAA,EAAcC,IAAK,mBAAmB,CAAEC,OAAQ,CAAEC,KAAMR,KAC/EN,EAAWU,EAASK,MACpBZ,GAAW,EACb,CAAE,MAAOa,GACPC,QAAQb,MAAM,0BAA2BY,GACzCX,EAAS,mDACTF,GAAW,EACb,GAGFe,EAAc,GACb,IAEChB,GAEAP,EAAAA,EAAAA,KAAA,OAAKL,UAAU,gCAA+BI,SAAC,uBAM/CU,GAEAT,EAAAA,EAAAA,KAAA,OAAKL,UAAU,mBAAkBI,SAC9BU,KAMLlB,EAAAA,EAAAA,MAAA,OAAKI,UAAU,GAAEI,SAAA,EAEfC,EAAAA,EAAAA,KAAA,OAAKL,UAAU,kBAAiBI,UAC9BC,EAAAA,EAAAA,KAAA,OACEL,UAAU,iDACVC,MAAO,CACL4B,eAAgB,OAChBC,gBAAiB,OACjBC,wBAAyB,SACzB3B,SAEDK,EAAQuB,KAAI,CAACC,EAAMC,KAClB7B,EAAAA,EAAAA,KAAA,OAAiCL,UAAU,aAAYI,UACrDC,EAAAA,EAAAA,KAACf,EAAU,IAAK2C,KADP,GAAEA,EAAKE,MAAMD,YAQ9B7B,EAAAA,EAAAA,KAAA,OAAKL,UAAU,kBAAiBI,UAC9BC,EAAAA,EAAAA,KAAA,OACEL,UAAU,2CACVC,MAAO,CAAE4B,eAAgB,QAASzB,SAEjCK,EAAQuB,KAAI,CAACC,EAAMC,KAClB7B,EAAAA,EAAAA,KAACf,EAAU,IAAiC2C,GAA1B,GAAEA,EAAKE,MAAMD,aAIjC,C","sources":["components/Notices.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axiosInstance from '../axios';\r\nimport { Clock } from 'lucide-react';\r\n\r\nconst NoticeCard = ({ title, excerpt, createdAt, link }) => (\r\n  <a \r\n    href={link} // Redirect to the link when clicked\r\n    target=\"_blank\" // Open in a new tab\r\n    rel=\"noopener noreferrer\" // Security feature for opening links\r\n    className=\"block w-[80vw] md:w-auto bg-gray-90 shadow-md p-4 mb-4 border border-gray-300 hover:shadow-lg transition-shadow duration-300 no-underline\" // Remove underline\r\n    style={{ textDecoration: 'none', color: 'inherit' }} // Additional styles to ensure no link styling\r\n  >\r\n    <div className=\"flex justify-between items-start mb-2\">\r\n      <h3 className=\"text-lg   text-left\">{title}</h3>\r\n      <span className=\"text-xs text-gray-500 ml-2 whitespace-nowrap\">\r\n        {new Date(createdAt).toLocaleDateString()}\r\n      </span>\r\n    </div>\r\n    <p className=\"text-sm text-gray-600 line-clamp-2 text-left\">{excerpt}</p>\r\n  </a>\r\n);\r\n\r\nconst Notices = () => {\r\n  const [notices, setNotices] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [activeTab, setActiveTab] = useState('current');\r\n  useEffect(() => {\r\n    const fetchNotices = async () => {\r\n      try {\r\n        const response = await axiosInstance.get(`/notices/notices`, { params: { type: activeTab } });\r\n        setNotices(response.data);\r\n        setLoading(false);\r\n      } catch (err) {\r\n        console.error('Error fetching notices:', err);\r\n        setError('Failed to load notices. Please try again later.');\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchNotices();\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"p-4 text-center text-gray-500\">\r\n        Loading notices...\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"p-4 text-red-500\">\r\n        {error}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"\">\r\n      {/* Mobile: Horizontal Scroll */}\r\n      <div className=\"block md:hidden\">\r\n        <div \r\n          className=\"flex gap-4 overflow-x-auto pb-4 scrollbar-hide\"\r\n          style={{ \r\n            scrollbarWidth: 'none', \r\n            msOverflowStyle: 'none',\r\n            WebkitOverflowScrolling: 'touch'\r\n          }}\r\n        >\r\n          {notices.map((item, index) => (\r\n            <div key={`${item.id}-${index}`} className=\" last:mr-2\">\r\n              <NoticeCard {...item} />\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Medium and Large: Vertical Scroll */}\r\n      <div className=\"hidden md:block\">\r\n        <div \r\n          className=\"space-y-4 overflow-y-auto h-[398px] pr-2\"\r\n          style={{ scrollbarWidth: 'thin' }}\r\n        >\r\n          {notices.map((item, index) => (\r\n            <NoticeCard key={`${item.id}-${index}`} {...item} />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notices;"],"names":["NoticeCard","_ref","title","excerpt","createdAt","link","_jsxs","href","target","rel","className","style","textDecoration","color","children","_jsx","Date","toLocaleDateString","Notices","notices","setNotices","useState","loading","setLoading","error","setError","activeTab","setActiveTab","useEffect","async","response","axiosInstance","get","params","type","data","err","console","fetchNotices","scrollbarWidth","msOverflowStyle","WebkitOverflowScrolling","map","item","index","id"],"sourceRoot":""}