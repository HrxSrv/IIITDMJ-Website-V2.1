{"version":3,"file":"static/js/171.6cf6aae7.chunk.js","mappings":"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","sources":["components/AboutAndVisitor.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';import { Link } from 'react-router-dom';\r\n// DirectorCard Component\r\nconst DirectorCard = ({ title, content, media, buttons }) => {\r\n  return (\r\n    <div className=\"bg-white rounded-lg shadow-md overflow-hidden w-full md:w-1/2\">\r\n      <div className=\"p-6 bg-blue-50 h-full flex flex-col justify-between\">\r\n        <div>\r\n          <h3 className=\"font-bold text-lg mb-2 text-left\">\r\n            {title.split(' ').map((word, index) => (\r\n              <span key={index} className={index === title.split(' ').length - 1 ? \"text-blue-600\" : \"\"}>\r\n                {word}{' '}\r\n              </span>\r\n            ))}\r\n          </h3>\r\n          <div className=\"w-12 h-1 bg-blue-600 mb-4\"></div>\r\n          <div className=\"flex flex-col md:flex-row\">\r\n            <div className=\"w-full md:w-1/2 flex flex-col justify-between mr-10\">\r\n              <div>\r\n                <h3 className=\"font-bold text-lg mb-2\">Prof. Bhartendu K Singh</h3>\r\n                <p className=\"text-gray-700 text-sm\">\r\n                  {content.slice(0, 150)}\r\n                </p>\r\n              </div>\r\n            </div>\r\n            <div className=\"w-full md:w-2/3 pr-0 md:pr-4 mb-4 md:mb-0\">\r\n              <img\r\n                src={media}\r\n                alt=\"Director\"\r\n                className=\"rounded-lg w-48 h-64 object-cover mr-auto ml-auto mt-3\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"flex justify-start mt-4\">\r\n          {buttons.map((button, index) => (\r\n            button.link ? (\r\n              <Link \r\n                key={index}\r\n                to={button.link}\r\n                className={`px-4 py-2 ${\r\n                  button.primary \r\n                    ? \"bg-blue-600 text-white hover:bg-blue-700\" \r\n                    : \"bg-white text-gray-700 hover:bg-gray-100 border border-gray-300\"\r\n                } transition-colors duration-300`}\r\n              >\r\n                {button.text}\r\n              </Link>\r\n            ) : (\r\n              <button \r\n                key={index}\r\n                className={`px-4 py-2 ${\r\n                  button.primary \r\n                    ? \"bg-blue-600 text-white hover:bg-blue-700\" \r\n                    : \"bg-white text-gray-700 hover:bg-gray-100 border border-gray-300\"\r\n                } transition-colors duration-300`}\r\n              >\r\n                {button.text}\r\n              </button>\r\n            )\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// InfoCard Component (for non-director content)\r\nconst InfoCard = ({ title, content, buttons, media, isVideo }) => {\r\n  const [currentImageIndex, setCurrentImageIndex] = useState(0);\r\n\r\n  useEffect(() => {\r\n    if (media.length > 1) {\r\n      const interval = setInterval(() => {\r\n        setCurrentImageIndex((prevIndex) => (prevIndex + 1) % media.length);\r\n      }, 5000); // Change image every 5 seconds\r\n      return () => clearInterval(interval);\r\n    }\r\n  }, [media]);\r\n\r\n  return (\r\n    <div className=\"bg-white rounded-lg shadow-md overflow-hidden w-full \">\r\n      <div className=\"p-6 h-full flex flex-col justify-between\">\r\n        <div>\r\n          <h2 className=\"text-2xl font-bold mb-2 text-left\">\r\n            {title.split(' ').map((word, index) => (\r\n              <span key={index} className={index === title.split(' ').length - 1 ? \"text-blue-600\" : \"\"}>\r\n                {word}{' '}\r\n              </span>\r\n            ))}\r\n          </h2>\r\n          <div className=\"w-12 h-1 bg-blue-600 mb-4\"></div>\r\n          <div className=\"flex flex-col md:flex-row\">\r\n            <div className=\"w-full md:w-1/2 pr-0 md:pr-4 mb-4 md:mb-0\">\r\n              <p className=\"text-gray-700 mb-4 text-left\">{content}</p>\r\n            </div>\r\n            <div className=\"w-full md:w-1/2 flex items-center\">\r\n              {isVideo ? (\r\n                <div className=\"relative w-full\" style={{paddingBottom: \"56.25%\"}}>\r\n                  <iframe \r\n                    src=\"/api/placeholder/560/315\" \r\n                    className=\"absolute top-0 left-0 w-full h-full\" \r\n                    frameBorder=\"0\" \r\n                    allow=\"autoplay; encrypted-media\" \r\n                    allowFullScreen\r\n                    title=\"IIITDMJ video\"\r\n                  ></iframe>\r\n                </div>\r\n              ) : (\r\n                <img\r\n                  src={media[currentImageIndex]}\r\n                  alt={`IIITDMJ ${currentImageIndex + 1}`}\r\n                  className=\"w-full h-48 md:h-64 object-cover rounded-lg\"\r\n                />\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"flex justify-start mt-4\">\r\n          {buttons.map((button, index) => (\r\n            <a \r\n              href={button.link}\r\n              key={index}\r\n              className={`px-4 py-2 ${\r\n                button.primary \r\n                  ? \"bg-blue-600 text-white hover:bg-blue-700\" \r\n                  : \"bg-white text-gray-700 hover:bg-gray-100 border border-gray-300\"\r\n              } transition-colors duration-300`}\r\n            >\r\n              {button.text}\r\n            </a>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Main Component to render both DirectorCard and InfoCard\r\nconst IITDelhiInfoCards = () => {\r\n  const college1 = process.env.REACT_APP_Backend + \"/public/WebsiteImages/3.jpg\";\r\n  const college2 = process.env.REACT_APP_Backend + \"/public/WebsiteImages/5.jpg\";\r\n  const dummyData = [\r\n    {\r\n      title: \"ABOUT IIITDMJ\",\r\n      content: \"IIIT Jabalpur fosters a vibrant and dynamic learning environment where students pursue degrees in various engineering disciplines, including Computer Science, Electronics, Mechanical, and Information Technology. \",\r\n      buttons: [\r\n        { text: \"Explore\", primary: true, link:'https://www.iiitdmj.ac.in/college_tour.html' },\r\n      ],\r\n      media: [\r\n        college1,\r\n        college2\r\n      ],\r\n      isVideo: false,\r\n      isDirector: false\r\n    },\r\n    {\r\n      title: \"DIRECTOR'S CORNER\",\r\n      content: \"Prof. Bhartendu K Singh has taken over the charge as Director, Indian Institute of Information Technology Jabalpur (IIITDMJ).\",\r\n      buttons: [{ text: \"Read more\", primary: false, link:'/directorPage' }],\r\n      media: \"https://www.iiitdmj.ac.in/assets/img/faculty/admin/Prof.%20Bhartendu%20K%20Singh.jpg\",\r\n      isVideo: false,\r\n      isDirector: true\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <div className=\"bg-white \">\r\n      <div className=\"max-w-[80vw] mx-auto\">\r\n        <div className=\"flex flex-col md:flex-row gap-8\">\r\n          {dummyData.map((card, index) => \r\n            card.isDirector ? (\r\n              <DirectorCard \r\n                key={index}\r\n                title={card.title}\r\n                content={card.content}\r\n                media={card.media}\r\n                buttons={card.buttons}\r\n              />\r\n            ) : (\r\n              <InfoCard \r\n                key={index}\r\n                title={card.title}\r\n                content={card.content}\r\n                media={card.media}\r\n                buttons={card.buttons}\r\n                isVideo={card.isVideo}\r\n              />\r\n            )\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IITDelhiInfoCards;\r\n"],"names":["DirectorCard","_ref","title","content","media","buttons","_jsx","className","children","_jsxs","split","map","word","index","length","slice","src","alt","button","link","Link","to","primary","text","InfoCard","_ref2","isVideo","currentImageIndex","setCurrentImageIndex","useState","useEffect","interval","setInterval","prevIndex","clearInterval","style","paddingBottom","frameBorder","allow","allowFullScreen","href","IITDelhiInfoCards","dummyData","process","isDirector","card"],"sourceRoot":""}