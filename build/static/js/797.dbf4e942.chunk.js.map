{"version":3,"file":"static/js/797.dbf4e942.chunk.js","mappings":"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","sources":["components/Events/Events.jsx"],"sourcesContent":["import React from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport { ChevronLeft, ChevronRight } from 'lucide-react';\r\nimport { format } from 'date-fns';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst EventCard = ({ event }) => (\r\n  <motion.div\r\n    whileHover={{ scale: 1.02 }}\r\n    className=\"relative min-w-[260px] md:min-w-[295px] h-[200px] rounded-xl overflow-hidden shadow-[0_4px_6px_-1px_rgba(0,0,0,0.1),0_2px_4px_-2px_rgba(0,0,0,0.05),0_0_0_1px_rgba(0,0,0,0.05),4px_4px_8px_rgba(0,0,0,0.1)] group bg-white\"\r\n  >\r\n    <Link to={`/event/${event.id}`}>\r\n      <div\r\n        className=\"absolute inset-0 bg-cover bg-center transition-transform duration-500 group-hover:scale-110\"\r\n        style={{\r\n          backgroundImage: `url(${event.cover_image})`,\r\n        }}\r\n      />\r\n      <div className=\"absolute inset-0 bg-gradient-to-t from-black/70 via-black/20 to-transparent\" />\r\n      \r\n      <div className=\"absolute top-4 right-4 bg-white/90 backdrop-blur-sm rounded-lg p-2 shadow-[0_2px_4px_rgba(0,0,0,0.1),0_0_0_1px_rgba(0,0,0,0.05)]\">\r\n        <div className=\"text-center\">\r\n          <span className=\"block text-sm font-semibold text-gray-800\">\r\n            {format(new Date(event.date), 'MMM')}\r\n          </span>\r\n          <span className=\"block text-2xl font-bold text-gray-900\">\r\n            {format(new Date(event.date), 'd')}\r\n          </span>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"absolute bottom-4 left-4 right-4\">\r\n        <h3 className=\"text-white font-semibold text-lg mb-1 line-clamp-2\">\r\n          {event.name}\r\n        </h3>\r\n        <p className=\"text-white/80 text-sm line-clamp-2\">\r\n          {event.description}\r\n        </p>\r\n      </div>\r\n    </Link>\r\n  </motion.div>\r\n);\r\n\r\nconst EventsSection = ({ events }) => {\r\n  const scrollRef = React.useRef(null);\r\n  const [isScrolling, setIsScrolling] = React.useState(false);\r\n\r\n  const scroll = (direction) => {\r\n    const { current } = scrollRef;\r\n    if (current && !isScrolling) {\r\n      setIsScrolling(true);\r\n      const scrollAmount = direction === 'left' ? -350 : 350;\r\n      \r\n      const isAtEnd = Math.abs(\r\n        current.scrollLeft + current.offsetWidth - current.scrollWidth\r\n      ) < 10;\r\n      \r\n      const isAtStart = current.scrollLeft <= 0;\r\n\r\n      if (direction === 'right' && isAtEnd) {\r\n        current.scrollTo({ left: 0, behavior: 'smooth' });\r\n      } else if (direction === 'left' && isAtStart) {\r\n        current.scrollTo({ left: current.scrollWidth - current.offsetWidth, behavior: 'smooth' });\r\n      } else {\r\n        current.scrollBy({ left: scrollAmount, behavior: 'smooth' });\r\n      }\r\n\r\n      // Reset scrolling state after animation\r\n      setTimeout(() => setIsScrolling(false), 500);\r\n    }\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    const { current } = scrollRef;\r\n    let interval;\r\n\r\n    const startAutoScroll = () => {\r\n      interval = setInterval(() => {\r\n        if (current && !isScrolling) {\r\n          const isAtEnd = Math.abs(\r\n            current.scrollLeft + current.offsetWidth - current.scrollWidth\r\n          ) < 10;\r\n\r\n          if (isAtEnd) {\r\n            current.scrollTo({ left: 0, behavior: 'auto' });\r\n            // Small delay before continuing the scroll\r\n            setTimeout(() => {\r\n              current.scrollBy({ left: 350, behavior: 'smooth' });\r\n            }, 50);\r\n          } else {\r\n            current.scrollBy({ left: 350, behavior: 'smooth' });\r\n          }\r\n        }\r\n      }, 3000);\r\n    };\r\n\r\n    startAutoScroll();\r\n\r\n    // Pause auto-scroll on hover\r\n    const pauseScroll = () => clearInterval(interval);\r\n    \r\n    current?.addEventListener('mouseenter', pauseScroll);\r\n    current?.addEventListener('mouseleave', startAutoScroll);\r\n\r\n    return () => {\r\n      clearInterval(interval);\r\n      current?.removeEventListener('mouseenter', pauseScroll);\r\n      current?.removeEventListener('mouseleave', startAutoScroll);\r\n    };\r\n  }, [isScrolling]);\r\n\r\n  return (\r\n    <div className=\"w-[90vw] bg-gray-100 py-16 px-8 rounded-lg shadow-lg mx-auto\">\r\n      <div className=\"container mx-auto px-4\">\r\n        <div className=\"flex items-center justify-between mb-8\">\r\n          <div>\r\n            <h2 className=\"text-3xl font-bold text-gray-900\">Events Gallery</h2>\r\n            <p className=\"text-gray-600 mt-2\">Discover our recent and upcoming events</p>\r\n          </div>\r\n          <div className=\"flex gap-2\">\r\n            <button\r\n              onClick={() => scroll('left')}\r\n              className=\"p-2 rounded-full bg-white shadow-md hover:bg-gray-50 transition-colors\"\r\n              disabled={isScrolling}\r\n            >\r\n              <ChevronLeft className=\"w-6 h-6\" />\r\n            </button>\r\n            <button\r\n              onClick={() => scroll('right')}\r\n              className=\"p-2 rounded-full bg-white shadow-md hover:bg-gray-50 transition-colors\"\r\n              disabled={isScrolling}\r\n            >\r\n              <ChevronRight className=\"w-6 h-6\" />\r\n            </button>\r\n          </div>\r\n        </div>\r\n        \r\n        <div\r\n          ref={scrollRef}\r\n          className=\"flex gap-6 overflow-x-auto hide-scrollbar snap-x snap-mandatory\"\r\n          style={{ \r\n            scrollbarWidth: 'none', \r\n            msOverflowStyle: 'none',\r\n          }}\r\n        >\r\n          {events.map((event) => (\r\n            <div key={event.id} className=\"snap-start\">\r\n              <EventCard event={event} />\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EventsSection;"],"names":["EventCard","_ref","event","_jsx","motion","div","whileHover","scale","className","children","_jsxs","Link","to","id","style","backgroundImage","cover_image","format","Date","date","name","description","_ref2","events","scrollRef","React","isScrolling","setIsScrolling","scroll","direction","current","scrollAmount","isAtEnd","Math","abs","scrollLeft","offsetWidth","scrollWidth","isAtStart","scrollTo","left","behavior","scrollBy","setTimeout","interval","startAutoScroll","setInterval","pauseScroll","clearInterval","addEventListener","removeEventListener","onClick","disabled","ChevronLeft","ChevronRight","ref","scrollbarWidth","msOverflowStyle","map"],"sourceRoot":""}