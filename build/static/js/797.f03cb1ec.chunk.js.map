{"version":3,"file":"static/js/797.f03cb1ec.chunk.js","mappings":"iNAMA,MAAMA,EAAYC,IAAA,IAAC,MAAEC,GAAOD,EAAA,OAC1BE,EAAAA,EAAAA,KAACC,EAAAA,EAAOC,IAAG,CACTC,WAAY,CAAEC,MAAO,MACrBC,UAAU,4NAA2NC,UAErOC,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAACC,GAAK,UAASV,EAAMW,KAAML,UAAU,sBAAqBC,SAAA,EAC7DN,EAAAA,EAAAA,KAAA,OACEK,UAAU,8FACVM,MAAO,CACLC,gBAAkB,OAAMb,EAAMc,mBAGlCb,EAAAA,EAAAA,KAAA,OAAKK,UAAU,iFAEfL,EAAAA,EAAAA,KAAA,OAAKK,UAAU,mIAAkIC,UAC/IC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,cAAaC,SAAA,EAC1BN,EAAAA,EAAAA,KAAA,QAAMK,UAAU,4CAA2CC,UACxDQ,EAAAA,EAAAA,IAAO,IAAIC,KAAKhB,EAAMiB,MAAO,UAEhChB,EAAAA,EAAAA,KAAA,QAAMK,UAAU,yCAAwCC,UACrDQ,EAAAA,EAAAA,IAAO,IAAIC,KAAKhB,EAAMiB,MAAO,aAKpCT,EAAAA,EAAAA,MAAA,OAAKF,UAAU,mCAAkCC,SAAA,EAC/CN,EAAAA,EAAAA,KAAA,MAAIK,UAAU,qDAAoDC,SAC/DP,EAAMkB,QAETjB,EAAAA,EAAAA,KAAA,KAAGK,UAAU,qCAAoCC,SAC9CP,EAAMmB,qBAIF,EAgKf,EA7JsBC,IAAiB,IAAhB,OAAEC,GAAQD,EAC/B,MAAME,EAAYC,EAAAA,OAAa,OACxBC,EAAaC,GAAkBF,EAAAA,UAAe,IAC9CG,EAAcC,GAAmBJ,EAAAA,UAAe,GAGvDA,EAAAA,WAAgB,KACd,MAAMK,EAAkBA,KACtB,MAAM,QAAEC,GAAYP,EAChBO,GACFF,EAAgBE,EAAQC,YAAcD,EAAQE,YAChD,EAKF,OAFAH,IACAI,OAAOC,iBAAiB,SAAUL,GAC3B,IAAMI,OAAOE,oBAAoB,SAAUN,EAAgB,GACjE,CAACP,IAEJ,MAAMc,EAAUC,IACd,MAAM,QAAEP,GAAYP,EACpB,GAAIO,IAAYL,EAAa,CAC3BC,GAAe,GAGf,MAAMY,EAAYL,OAAOM,WAAa,IAAM,IAAM,IAC5CC,EAA6B,SAAdH,GAAwBC,EAAYA,EAEnDG,EAAUC,KAAKC,IACnBb,EAAQc,WAAad,EAAQe,YAAcf,EAAQC,aACjD,GAEEe,EAAYhB,EAAQc,YAAc,EAEtB,UAAdP,GAAyBI,EAC3BX,EAAQiB,SAAS,CAAEC,KAAM,EAAGC,SAAU,WACf,SAAdZ,GAAwBS,EACjChB,EAAQiB,SAAS,CAAEC,KAAMlB,EAAQC,YAAcD,EAAQe,YAAaI,SAAU,WAE9EnB,EAAQoB,SAAS,CAAEF,KAAMR,EAAcS,SAAU,WAInDE,YAAW,IAAMzB,GAAe,IAAQ,IAC1C,GA4CF,OAzCAF,EAAAA,WAAgB,KACd,MAAM,QAAEM,GAAYP,EACpB,IAAI6B,EAEJ,MAAMC,EAAkBA,KACjB1B,IAELyB,EAAWE,aAAY,KACrB,GAAIxB,IAAYL,EAAa,CACXiB,KAAKC,IACnBb,EAAQc,WAAad,EAAQe,YAAcf,EAAQC,aACjD,IAGFD,EAAQiB,SAAS,CAAEC,KAAM,EAAGC,SAAU,SAEtCE,YAAW,KACTrB,EAAQoB,SAAS,CAAEF,KAAM,IAAKC,SAAU,UAAW,GAClD,KAEHnB,EAAQoB,SAAS,CAAEF,KAAM,IAAKC,SAAU,UAE5C,IACC,KAAK,EAGVI,IAGA,MAAME,EAAcA,IAAMC,cAAcJ,GAKxC,OAHO,OAAPtB,QAAO,IAAPA,GAAAA,EAASI,iBAAiB,aAAcqB,GACjC,OAAPzB,QAAO,IAAPA,GAAAA,EAASI,iBAAiB,aAAcmB,GAEjC,KACLG,cAAcJ,GACP,OAAPtB,QAAO,IAAPA,GAAAA,EAASK,oBAAoB,aAAcoB,GACpC,OAAPzB,QAAO,IAAPA,GAAAA,EAASK,oBAAoB,aAAckB,EAAgB,CAC5D,GACA,CAAC5B,EAAaE,KAGfzB,EAAAA,EAAAA,KAAA,WAASK,UAAU,+CAA8CC,UAC/DC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,yCAAwCC,SAAA,EACrDC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,iDAAgDC,SAAA,EAC7DC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEN,EAAAA,EAAAA,KAAA,MAAIK,UAAU,+CAA8CC,SAAC,oBAC7DN,EAAAA,EAAAA,KAAA,KAAGK,UAAU,6BAA4BC,SAAC,+CAG3CmB,IACClB,EAAAA,EAAAA,MAAA,OAAKF,UAAU,aAAYC,SAAA,EACzBN,EAAAA,EAAAA,KAAA,UACEuD,QAASA,IAAMrB,EAAO,QACtB7B,UAAU,yEACVmD,SAAUjC,EACV,aAAW,cAAajB,UAExBN,EAAAA,EAAAA,KAACyD,EAAAA,EAAW,CAACpD,UAAU,6BAEzBL,EAAAA,EAAAA,KAAA,UACEuD,QAASA,IAAMrB,EAAO,SACtB7B,UAAU,yEACVmD,SAAUjC,EACV,aAAW,eAAcjB,UAEzBN,EAAAA,EAAAA,KAAC0D,EAAAA,EAAY,CAACrD,UAAU,mCAMhCL,EAAAA,EAAAA,KAAA,OACE2D,IAAKtC,EACLhB,UAAU,gFACVM,MAAO,CACLiD,eAAgB,OAChBC,gBAAiB,QACjBvD,SAEDc,EAAO0C,OAAS,EACf1C,EAAO2C,KAAKhE,IACVC,EAAAA,EAAAA,KAAA,OAAoBK,UAAU,2BAA0BC,UACtDN,EAAAA,EAAAA,KAACH,EAAS,CAACE,MAAOA,KADVA,EAAMW,OAKlBV,EAAAA,EAAAA,KAAA,OAAKK,UAAU,0BAAyBC,UACtCN,EAAAA,EAAAA,KAAA,KAAGK,UAAU,gBAAeC,SAAC,2CAMlCmB,GAAgBL,EAAO0C,OAAS,IAC/B9D,EAAAA,EAAAA,KAAA,OAAKK,UAAU,6CAA4CC,SACxDc,EAAO2C,KAAI,CAACC,EAAGC,KACdjE,EAAAA,EAAAA,KAAA,OAEEK,UAAU,mCACV,cAAY,QAFP4D,WAQP,C","sources":["components/Events/Events.jsx"],"sourcesContent":["import React from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport { ChevronLeft, ChevronRight } from 'lucide-react';\r\nimport { format } from 'date-fns';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst EventCard = ({ event }) => (\r\n  <motion.div\r\n    whileHover={{ scale: 1.02 }}\r\n    className=\"relative min-w-[260px] w-full max-w-xs h-[200px] rounded-xl overflow-hidden shadow-[0_4px_6px_-1px_rgba(0,0,0,0.1),0_2px_4px_-2px_rgba(0,0,0,0.05),0_0_0_1px_rgba(0,0,0,0.05),4px_4px_8px_rgba(0,0,0,0.1)] group bg-white\"\r\n  >\r\n    <Link to={`/event/${event.id}`} className=\"block h-full w-full\">\r\n      <div\r\n        className=\"absolute inset-0 bg-cover bg-center transition-transform duration-500 group-hover:scale-110\"\r\n        style={{\r\n          backgroundImage: `url(${event.cover_image})`,\r\n        }}\r\n      />\r\n      <div className=\"absolute inset-0 bg-gradient-to-t from-black/70 via-black/20 to-transparent\" />\r\n      \r\n      <div className=\"absolute top-4 right-4 bg-white/90 backdrop-blur-sm rounded-lg p-2 shadow-[0_2px_4px_rgba(0,0,0,0.1),0_0_0_1px_rgba(0,0,0,0.05)]\">\r\n        <div className=\"text-center\">\r\n          <span className=\"block text-sm font-semibold text-gray-800\">\r\n            {format(new Date(event.date), 'MMM')}\r\n          </span>\r\n          <span className=\"block text-2xl font-bold text-gray-900\">\r\n            {format(new Date(event.date), 'd')}\r\n          </span>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"absolute bottom-4 left-4 right-4\">\r\n        <h3 className=\"text-white font-semibold text-lg mb-1 line-clamp-2\">\r\n          {event.name}\r\n        </h3>\r\n        <p className=\"text-white/80 text-sm line-clamp-2\">\r\n          {event.description}\r\n        </p>\r\n      </div>\r\n    </Link>\r\n  </motion.div>\r\n);\r\n\r\nconst EventsSection = ({ events }) => {\r\n  const scrollRef = React.useRef(null);\r\n  const [isScrolling, setIsScrolling] = React.useState(false);\r\n  const [showControls, setShowControls] = React.useState(false);\r\n\r\n  // Check if content is scrollable\r\n  React.useEffect(() => {\r\n    const checkScrollable = () => {\r\n      const { current } = scrollRef;\r\n      if (current) {\r\n        setShowControls(current.scrollWidth > current.clientWidth);\r\n      }\r\n    };\r\n\r\n    checkScrollable();\r\n    window.addEventListener('resize', checkScrollable);\r\n    return () => window.removeEventListener('resize', checkScrollable);\r\n  }, [events]);\r\n\r\n  const scroll = (direction) => {\r\n    const { current } = scrollRef;\r\n    if (current && !isScrolling) {\r\n      setIsScrolling(true);\r\n      \r\n      // Adjust scroll amount based on screen size\r\n      const cardWidth = window.innerWidth < 640 ? 280 : 350;\r\n      const scrollAmount = direction === 'left' ? -cardWidth : cardWidth;\r\n      \r\n      const isAtEnd = Math.abs(\r\n        current.scrollLeft + current.offsetWidth - current.scrollWidth\r\n      ) < 10;\r\n      \r\n      const isAtStart = current.scrollLeft <= 0;\r\n\r\n      if (direction === 'right' && isAtEnd) {\r\n        current.scrollTo({ left: 0, behavior: 'smooth' });\r\n      } else if (direction === 'left' && isAtStart) {\r\n        current.scrollTo({ left: current.scrollWidth - current.offsetWidth, behavior: 'smooth' });\r\n      } else {\r\n        current.scrollBy({ left: scrollAmount, behavior: 'smooth' });\r\n      }\r\n\r\n      // Reset scrolling state after animation\r\n      setTimeout(() => setIsScrolling(false), 500);\r\n    }\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    const { current } = scrollRef;\r\n    let interval;\r\n\r\n    const startAutoScroll = () => {\r\n      if (!showControls) return; // Don't auto-scroll if not scrollable\r\n      \r\n      interval = setInterval(() => {\r\n        if (current && !isScrolling) {\r\n          const isAtEnd = Math.abs(\r\n            current.scrollLeft + current.offsetWidth - current.scrollWidth\r\n          ) < 10;\r\n\r\n          if (isAtEnd) {\r\n            current.scrollTo({ left: 0, behavior: 'auto' });\r\n            // Small delay before continuing the scroll\r\n            setTimeout(() => {\r\n              current.scrollBy({ left: 350, behavior: 'smooth' });\r\n            }, 50);\r\n          } else {\r\n            current.scrollBy({ left: 350, behavior: 'smooth' });\r\n          }\r\n        }\r\n      }, 3000);\r\n    };\r\n\r\n    startAutoScroll();\r\n\r\n    // Pause auto-scroll on hover\r\n    const pauseScroll = () => clearInterval(interval);\r\n    \r\n    current?.addEventListener('mouseenter', pauseScroll);\r\n    current?.addEventListener('mouseleave', startAutoScroll);\r\n\r\n    return () => {\r\n      clearInterval(interval);\r\n      current?.removeEventListener('mouseenter', pauseScroll);\r\n      current?.removeEventListener('mouseleave', startAutoScroll);\r\n    };\r\n  }, [isScrolling, showControls]);\r\n\r\n  return (\r\n    <section className=\"w-full py-12 md:py-16 bg-gray-100 rounded-lg\">\r\n      <div className=\"container mx-auto px-4 md:px-6 lg:px-8\">\r\n        <div className=\"flex items-center justify-between mb-6 md:mb-8\">\r\n          <div>\r\n            <h2 className=\"text-2xl md:text-3xl font-bold text-gray-900\">Events Gallery</h2>\r\n            <p className=\"text-gray-600 mt-1 md:mt-2\">Discover our recent and upcoming events</p>\r\n          </div>\r\n          \r\n          {showControls && (\r\n            <div className=\"flex gap-2\">\r\n              <button\r\n                onClick={() => scroll('left')}\r\n                className=\"p-2 rounded-full bg-white shadow-md hover:bg-gray-50 transition-colors\"\r\n                disabled={isScrolling}\r\n                aria-label=\"Scroll left\"\r\n              >\r\n                <ChevronLeft className=\"w-5 h-5 md:w-6 md:h-6\" />\r\n              </button>\r\n              <button\r\n                onClick={() => scroll('right')}\r\n                className=\"p-2 rounded-full bg-white shadow-md hover:bg-gray-50 transition-colors\"\r\n                disabled={isScrolling}\r\n                aria-label=\"Scroll right\"\r\n              >\r\n                <ChevronRight className=\"w-5 h-5 md:w-6 md:h-6\" />\r\n              </button>\r\n            </div>\r\n          )}\r\n        </div>\r\n        \r\n        <div\r\n          ref={scrollRef}\r\n          className=\"flex gap-4 md:gap-6 overflow-x-auto pb-4 snap-x snap-mandatory hide-scrollbar\"\r\n          style={{ \r\n            scrollbarWidth: 'none', \r\n            msOverflowStyle: 'none',\r\n          }}\r\n        >\r\n          {events.length > 0 ? (\r\n            events.map((event) => (\r\n              <div key={event.id} className=\"snap-start flex-shrink-0\">\r\n                <EventCard event={event} />\r\n              </div>\r\n            ))\r\n          ) : (\r\n            <div className=\"w-full text-center py-8\">\r\n              <p className=\"text-gray-500\">No events available at the moment.</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n        \r\n        {/* Mobile-friendly pagination indicators */}\r\n        {showControls && events.length > 1 && (\r\n          <div className=\"flex justify-center mt-4 gap-1.5 md:hidden\">\r\n            {events.map((_, index) => (\r\n              <div\r\n                key={index}\r\n                className=\"w-2 h-2 rounded-full bg-gray-300\"\r\n                aria-hidden=\"true\"\r\n              />\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default EventsSection;"],"names":["EventCard","_ref","event","_jsx","motion","div","whileHover","scale","className","children","_jsxs","Link","to","id","style","backgroundImage","cover_image","format","Date","date","name","description","_ref2","events","scrollRef","React","isScrolling","setIsScrolling","showControls","setShowControls","checkScrollable","current","scrollWidth","clientWidth","window","addEventListener","removeEventListener","scroll","direction","cardWidth","innerWidth","scrollAmount","isAtEnd","Math","abs","scrollLeft","offsetWidth","isAtStart","scrollTo","left","behavior","scrollBy","setTimeout","interval","startAutoScroll","setInterval","pauseScroll","clearInterval","onClick","disabled","ChevronLeft","ChevronRight","ref","scrollbarWidth","msOverflowStyle","length","map","_","index"],"sourceRoot":""}