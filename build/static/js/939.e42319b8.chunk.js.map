{"version":3,"file":"static/js/939.e42319b8.chunk.js","mappings":"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","sources":["components/ImportantAnnouncement.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { \r\n  AlertCircle, \r\n  ExternalLink, \r\n  RefreshCw, \r\n  Bell,\r\n  X,\r\n  ChevronRight,\r\n  Sparkles,\r\n  Calendar\r\n} from \"lucide-react\";\r\nimport axiosInstance from \"../axios\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst AnnouncementSkeleton = () => (\r\n  <div className=\"animate-pulse bg-gradient-to-br from-red-50 to-rose-100 rounded-xl shadow-sm p-4 h-40\">\r\n    <div className=\"flex items-center space-x-2\">\r\n      <div className=\"h-5 w-5 bg-red-200 rounded-full\"></div>\r\n      <div className=\"h-4 bg-red-200 rounded w-3/4\"></div>\r\n    </div>\r\n    <div className=\"mt-4 h-16 bg-red-100/50 rounded\"></div>\r\n    <div className=\"flex items-center justify-between mt-6\">\r\n      <div className=\"h-3 bg-red-200 rounded w-20\"></div>\r\n      <div className=\"h-4 w-4 bg-red-200 rounded\"></div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nfunction Modal({ isOpen, onClose, children }) {\r\n  return (\r\n    // backdrop\r\n    <div\r\n      onClick={onClose}\r\n      className={`\r\n        fixed inset-0 flex justify-center items-center transition-all duration-300 backdrop-blur-sm z-50\r\n        ${isOpen ? \"visible bg-black/30 opacity-100\" : \"invisible opacity-0\"}\r\n      `}\r\n    >\r\n      {/* modal */}\r\n      <div\r\n        onClick={(e) => e.stopPropagation()}\r\n        className={`\r\n          fixed bg-white rounded-2xl shadow-lg p-6 transition-all duration-300 max-w-2xl w-full max-h-[90vh] overflow-y-auto\r\n          ${isOpen ? \"scale-100 opacity-100\" : \"scale-95 opacity-0\"}\r\n        `}\r\n        style={{\r\n          top: \"50%\",\r\n          left: \"50%\",\r\n          transform: \"translate(-50%, -50%)\",\r\n        }}\r\n      >\r\n        <button\r\n          onClick={onClose}\r\n          className=\"absolute top-4 right-4 p-2 rounded-full text-gray-400 hover:bg-gray-100 hover:text-gray-600 transition-colors\"\r\n        >\r\n          <X className=\"w-5 h-5\" />\r\n        </button>\r\n        {children}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst Announcement = ({ text, link, createdAt, isInModal = false }) => {\r\n  const formatTimeAgo = (dateString) => {\r\n    const date = new Date(dateString);\r\n    const now = new Date();\r\n    const diffInSeconds = Math.floor((now - date) / 1000);\r\n    \r\n    if (diffInSeconds < 60) return 'Just now';\r\n    if (diffInSeconds < 3600) return `${Math.floor(diffInSeconds / 60)} mins ago`;\r\n    if (diffInSeconds < 86400) return `${Math.floor(diffInSeconds / 3600)} hours ago`;\r\n    return `${Math.floor(diffInSeconds / 86400)} days ago`;\r\n  };\r\n\r\n  return (\r\n    <a\r\n      href={link}\r\n      className={`group relative overflow-hidden transition-all duration-300 rounded-xl ${\r\n        isInModal \r\n          ? 'bg-white hover:bg-gray-50 shadow hover:shadow-md p-5 mb-4 border border-gray-100'\r\n          : 'bg-gradient-to-br from-red-50 via-red-100 to-rose-100 hover:from-red-100 hover:to-rose-200 shadow-sm hover:shadow-md p-5 h-full'\r\n      }`}\r\n      target=\"_blank\"\r\n      rel=\"noopener noreferrer\"\r\n    >\r\n      <span className=\"absolute -top-20 -right-20 w-32 h-32 bg-gradient-to-br from-red-100 to-red-200 rounded-full opacity-50 group-hover:opacity-70 transition-opacity duration-500\"></span>\r\n      \r\n      <div className=\"flex flex-col justify-between h-full relative z-10\">\r\n        <div className=\"flex items-start space-x-3\">\r\n          <div className=\"bg-white/80 p-2 rounded-full shadow-sm\">\r\n            <Bell className=\"w-4 h-4 text-red-600 flex-shrink-0\" />\r\n          </div>\r\n          <div className=\"flex-1\">\r\n            <span className={`text-red-800 font-medium ${isInModal ? 'text-base' : 'text-md line-clamp-3'}`}>\r\n              {text}\r\n            </span>\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"flex items-center justify-between mt-4 pt-3 border-t border-red-200/30\">\r\n          <div className=\"flex items-center space-x-2\">\r\n            <Calendar className=\"w-3 h-3 text-red-500\" />\r\n            <span className=\"text-red-500 text-xs font-medium\">\r\n              {formatTimeAgo(createdAt)}\r\n            </span>\r\n          </div>\r\n          <div className=\"bg-white/80 p-1.5 rounded-full shadow-sm group-hover:bg-white transition-colors\">\r\n            <ExternalLink \r\n              className=\"w-3.5 h-3.5 text-red-600 group-hover:translate-x-0.5 transition-all\" \r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </a>\r\n  );\r\n};\r\n\r\nconst ImportantAnnouncement = () => {\r\n  const [data, setData] = useState([]); \r\n  const [error, setError] = useState(null);   \r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n\r\n  const fetchData = async (showLoading = true) => {\r\n    if (showLoading) setIsLoading(true);\r\n    setError(null);\r\n\r\n    try {\r\n      const response = await axiosInstance.get(\"RedAnnouncements/RedAnnouncements\");\r\n      setData(response.data); \r\n      setIsLoading(false);\r\n    } catch (err) {\r\n      console.error(\"Error fetching Announcements:\", err);\r\n      setError({\r\n        message: \"Failed to fetch Announcements\",\r\n        details: err.response?.data?.message || \"Network error or server unavailable\"\r\n      });\r\n      setIsLoading(false);\r\n    }\r\n  };   \r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []); \r\n\r\n  const renderContent = () => {\r\n    if (isLoading) {\r\n      return (\r\n        <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-6\">\r\n          {[1, 2, 3, 4].map((_, index) => (\r\n            <AnnouncementSkeleton key={index} />\r\n          ))}\r\n        </div>\r\n      );\r\n    }\r\n\r\n    if (error) {\r\n      return (\r\n        <div className=\"bg-gradient-to-r from-red-50 to-red-100 border border-red-200 rounded-xl p-8 text-center shadow-sm\">\r\n          <div className=\"bg-white/80 p-4 rounded-full shadow-sm w-20 h-20 flex items-center justify-center mx-auto mb-6\">\r\n            <AlertCircle className=\"w-10 h-10 text-red-500\" />\r\n          </div>\r\n          <h2 className=\"text-2xl font-bold text-red-800 mb-3\">\r\n            Announcement Fetch Failed\r\n          </h2>\r\n          <p className=\"text-red-600 mb-4 max-w-md mx-auto\">{error.message}</p>\r\n          <p className=\"text-red-500 text-sm mb-6 max-w-md mx-auto\">{error.details}</p>\r\n          <button \r\n            onClick={() => fetchData()}\r\n            className=\"bg-gradient-to-r from-red-500 to-red-600 text-white px-6 py-3 rounded-full hover:from-red-600 hover:to-red-700 transition-colors shadow-sm hover:shadow-md flex items-center mx-auto\"\r\n          >\r\n            <RefreshCw className=\"mr-2 w-4 h-4 animate-spin-slow\" /> Retry\r\n          </button>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    if (data.length === 0) {\r\n      return (\r\n        <div className=\"bg-gradient-to-r from-gray-50 to-gray-100 rounded-xl p-8 text-center shadow-sm border border-gray-200\">\r\n          <div className=\"bg-white p-4 rounded-full shadow-sm w-20 h-20 flex items-center justify-center mx-auto mb-6\">\r\n            <Bell className=\"w-10 h-10 text-gray-400\" />\r\n          </div>\r\n          <h2 className=\"text-2xl font-bold text-gray-800 mb-2\">\r\n            No Important Announcements\r\n          </h2>\r\n          <p className=\"text-gray-600 mt-2 max-w-md mx-auto\">\r\n            Everything is running smoothly. Check back later for updates.\r\n          </p>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    const displayedAnnouncements = data.slice(0, 4);\r\n    const hasMoreAnnouncements = data.length > 4;\r\n\r\n    return (\r\n      <>\r\n        <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-6\">\r\n          {displayedAnnouncements.map(({ title, link, createdAt }, index) => (\r\n            <Announcement \r\n              key={index} \r\n              text={title} \r\n              link={link} \r\n              createdAt={createdAt}\r\n            />\r\n          ))}\r\n        </div>\r\n        \r\n        {hasMoreAnnouncements && (\r\n          <Link\r\n            to=\"/allImportantAnnouncements\"\r\n            className=\"group flex items-center justify-center gap-2 w-full max-w-md mx-auto mt-8 px-6 py-3 text-sm font-medium text-red-700 bg-gradient-to-r from-red-50 to-red-100 hover:from-red-100 hover:to-red-200 rounded-full transition-all duration-300 shadow-sm hover:shadow border border-red-200\"\r\n          >\r\n            <span>See All Announcements</span>\r\n            <div className=\"bg-white p-1 rounded-full\">\r\n              <ChevronRight\r\n                size={14} \r\n                className=\"transition-transform duration-300 group-hover:translate-x-1 text-red-600\" \r\n              />\r\n            </div>\r\n          </Link>\r\n        )}\r\n\r\n        <Modal\r\n          isOpen={isModalOpen}\r\n          onClose={() => setIsModalOpen(false)}\r\n        >\r\n          <div className=\"p-4\">\r\n            <div className=\"flex items-center space-x-3 mb-6\">\r\n              <Sparkles className=\"w-6 h-6 text-red-500\" />\r\n              <h2 className=\"text-2xl font-bold text-gray-900\">\r\n                All Announcements\r\n              </h2>\r\n            </div>\r\n            <div className=\"space-y-4 max-h-[60vh] overflow-y-auto pr-2\">\r\n              {data.map(({ title, link, createdAt }, index) => (\r\n                <Announcement \r\n                  key={index} \r\n                  text={title} \r\n                  link={link} \r\n                  createdAt={createdAt}\r\n                  isInModal={true}\r\n                />\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </Modal>\r\n      </>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"w-full max-w-7xl mx-auto  py-6\">\r\n      <div className=\"flex items-center justify-between mb-6\">\r\n        <div className=\"flex items-center space-x-3\">\r\n          <div className=\"bg-gradient-to-br from-red-100 to-red-200 p-2 rounded-lg shadow-sm\">\r\n            <Bell className=\"w-5 h-5 text-red-600\" />\r\n          </div>\r\n          <h2 className=\"text-xl font-bold text-gray-800\">Important Announcements</h2>\r\n        </div>\r\n        <button \r\n          onClick={() => fetchData(false)}\r\n          className=\"text-gray-500 hover:text-gray-700 p-2 rounded-full hover:bg-gray-100 transition-colors\"\r\n        >\r\n          <RefreshCw className=\"w-4 h-4\" />\r\n        </button>\r\n      </div>\r\n      {renderContent()}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImportantAnnouncement;"],"names":["AnnouncementSkeleton","_jsxs","className","children","_jsx","Modal","_ref","isOpen","onClose","onClick","e","stopPropagation","style","top","left","transform","X","Announcement","_ref2","text","link","createdAt","isInModal","href","target","rel","Bell","Calendar","dateString","date","Date","now","diffInSeconds","Math","floor","formatTimeAgo","ExternalLink","ImportantAnnouncement","data","setData","useState","error","setError","isLoading","setIsLoading","isModalOpen","setIsModalOpen","fetchData","async","arguments","length","undefined","response","axiosInstance","get","err","_err$response","_err$response$data","console","message","details","useEffect","RefreshCw","renderContent","map","_","index","AlertCircle","displayedAnnouncements","slice","hasMoreAnnouncements","_Fragment","_ref3","title","Link","to","ChevronRight","size","Sparkles","_ref4"],"sourceRoot":""}